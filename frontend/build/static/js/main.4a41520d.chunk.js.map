{"version":3,"sources":["constants/userConstants.js","constants/parentConstants.js","constants/studentConstants.js","utils/sorters.js","constants/teacherConstants.js","store.js","reducers/userReducers.js","reducers/parentReducers.js","reducers/studentReducers.js","reducers/teacherReducers.js","components/Header.js","actions/userActions.js","components/Footer.js","components/FormContainer.js","screens/LoginScreen.js","screens/ParentDashboard.js","actions/parentActions.js","components/CirclePercentage.js","components/studentData/AverageEffort.js","components/studentData/ReportsList.js","components/studentData/SubjectList.js","screens/ReportScreen.js","actions/studentActions.js","screens/SearchScreen.js","actions/teacherActions.js","screens/SubjectReportScreen.js","screens/SingleReportScreen.js","screens/HomeScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","PARENT_REQUEST","PARENT_SUCCESS","PARENT_FAIL","STUDENT_REQUEST","STUDENT_SUCCESS","STUDENT_FAIL","avgEffort","data","map","report","subject","effort","reduce","total","length","orderedReports","sort","a","b","Date","createdAt","subjectSorter","subjectReports","forEach","console","log","some","o","subjectName","subjectArr","date","push","obj","TEACHER_REQUEST","TEACHER_SUCCESS","TEACHER_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","parentData","studentData","reportData","s","student","ordered","average","subjects","teacherData","teacherStudentData","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","useEffect","axios","get","crossdomain","response","message","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","email","role","Item","_id","onClick","Link","class","Footer","Row","Col","FormContainer","children","xs","md","LoginScreen","location","history","useState","setEmail","password","setPassword","Tabs","defaultActiveKey","Tab","eventKey","window","open","Form","onSubmit","e","preventDefault","config","headers","post","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","ParentDashboard","match","Table","striped","bordered","hover","responsive","reportDate","updatedAt","name","getDate","getMonth","getFullYear","StyledSvg","styled","svg","StyledCircle","circle","StyledCircleBg","StyledText","text","StyledSubText","CirclePercentage","size","progress","previousEffort","strokeWidth","circleOneStroke","circleTwoStroke","offset","setOffset","circleRef","useRef","center","radius","circumference","Math","PI","progressOffset","current","style","width","height","stroke","cx","cy","r","ref","strokeDasharray","strokeDashoffset","x","y","AverageEffort","averageEffortArray","currentEffort","currentEffortPercentage","ReportsList","reports","ListGroup","index","SubjectList","div","ReportScreen","reduxReportData","userId","params","marginBottom","sm","SearchScreen","intake","setIntake","setName","teachersGetStudentData","SubjectReportScreen","grades","filter","gradesObj","subjectLabels","subjectGrades","graphDate","subjectGrade","labels","datasets","label","borderColor","options","display","legend","position","scales","yAxes","ticks","beginAtZero","SingleReportScreen","reportId","reportObj","Card","Body","Title","Text","HomeScreen","Jumbotron","color","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a41520d.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const CHECK_SESSION = 'CHECK_SESSION';\r\n","export const PARENT_REQUEST = 'PARENT_REQUEST';\r\nexport const PARENT_SUCCESS = 'PARENT_SUCCESS';\r\nexport const PARENT_FAIL = 'PARENT_FAIL';\r\n","export const STUDENT_REQUEST = 'STUDENT_REQUEST';\r\nexport const STUDENT_SUCCESS = 'STUDENT_SUCCESS';\r\nexport const STUDENT_FAIL = 'STUDENT_FAIL';\r\n","// Find average effort of the reports\r\n// Returns an array of numbers representing a reports average effort\r\nexport const avgEffort = (data) => {\r\n  return data\r\n    .map((report) =>\r\n      report.data.map((subject) => {\r\n        return subject.effort;\r\n      })\r\n    )\r\n    .map(\r\n      (report) =>\r\n        report.reduce((total, effort) => total + effort) / report.length\r\n    );\r\n};\r\n\r\n// Sort the array of reports, newest first\r\nexport const orderedReports = (data) => {\r\n  return data.sort((a, b) => {\r\n    return new Date(b.createdAt) - new Date(a.createdAt);\r\n  });\r\n};\r\n\r\n//   Sort the sorted data by subject rather than by report date\r\nexport const subjectSorter = (data) => {\r\n  let subjectReports = [];\r\n  data.forEach((report) => {\r\n    console.log(report);\r\n    report.data.forEach((subject) => {\r\n      console.log(subject);\r\n      // If the subject name appears in the subjectreports array\r\n      if (!subjectReports.some((o) => o.subjectName === subject.subjectName)) {\r\n        // Add a new object\r\n        let obj = { subjectName: subject.subjectName, data: [] };\r\n        subjectReports.push(obj);\r\n        subject.date = report.createdAt;\r\n        obj.data.push(subject);\r\n      } else {\r\n        subjectReports.forEach((subjectArr) => {\r\n          if (subjectArr.subjectName === subject.subjectName) {\r\n            subject.date = report.createdAt;\r\n            subjectArr.data.push(subject);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n  return subjectReports;\r\n};\r\n","export const TEACHER_REQUEST = 'TEACHER_REQUEST';\r\nexport const TEACHER_SUCCESS = 'TEACHER_SUCCESS';\r\nexport const TEACHER_FAIL = 'TEACHER_FAIL';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { userLoginReducer } from './reducers/userReducers';\r\nimport { parentReducer } from './reducers/parentReducers';\r\nimport { studentReducer } from './reducers/studentReducers';\r\nimport { teacherReducer } from './reducers/teacherReducers';\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  parentData: parentReducer,\r\n  reportData: studentReducer,\r\n  teacherData: teacherReducer,\r\n});\r\n\r\n// Checklocal storage, could cookie be checked here?\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\n// Set redux initial state to userinfo from local storage if it exists\r\nconst initialState = { userLogin: { userInfo: userInfoFromStorage } };\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      console.log('userReducer login request');\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      console.log('userReducer login success');\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      console.log('userReducer login fail');\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PARENT_REQUEST,\r\n  PARENT_SUCCESS,\r\n  PARENT_FAIL,\r\n} from '../constants/parentConstants';\r\n\r\nexport const parentReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PARENT_REQUEST:\r\n      console.log('Parent request');\r\n      return { loading: true };\r\n    case PARENT_SUCCESS:\r\n      console.log('Parent success');\r\n      return { loading: false, studentData: action.payload };\r\n    case PARENT_FAIL:\r\n      console.log('Parent fail');\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  STUDENT_REQUEST,\r\n  STUDENT_SUCCESS,\r\n  STUDENT_FAIL,\r\n} from '../constants/studentConstants';\r\nimport { orderedReports, avgEffort, subjectSorter } from '../utils/sorters';\r\n\r\nexport const studentReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case STUDENT_REQUEST:\r\n      console.log('STUDENT request');\r\n      return { loading: true };\r\n    case STUDENT_SUCCESS:\r\n      console.log('STUDENT success');\r\n      console.log(action.payload);\r\n      const o = orderedReports(action.payload.reportData);\r\n      const a = avgEffort(o);\r\n      const s = subjectSorter(o);\r\n      return {\r\n        loading: false,\r\n        student: action.payload,\r\n        ordered: o,\r\n        average: a,\r\n        subjects: s,\r\n      };\r\n    case STUDENT_FAIL:\r\n      console.log('STUDENT fail');\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TEACHER_REQUEST,\r\n  TEACHER_SUCCESS,\r\n  TEACHER_FAIL,\r\n} from '../constants/teacherConstants';\r\n\r\nexport const teacherReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TEACHER_REQUEST:\r\n      console.log('TEACHER request');\r\n      return { loading: true };\r\n    case TEACHER_SUCCESS:\r\n      console.log('TEACHER success');\r\n      return { loading: false, teacherStudentData: action.payload };\r\n    case TEACHER_FAIL:\r\n      console.log('TEACHER fail');\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\n// useSelector for state, dispatch for actions\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout, checkSession } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  // Access Redux actions\r\n  const dispatch = useDispatch();\r\n\r\n  // User state from Redux\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // User clicks logout button\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check user has token\r\n    dispatch(checkSession());\r\n  }, []);\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Friesland Progress Reports</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              {/* Show email address and links if user logged in */}\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.email} id='username'>\r\n                  {/* What wil the dashboard even do???? */}\r\n                  {/* <LinkContainer to='/dashboard'>\r\n                    <NavDropdown.Item>Dashboard</NavDropdown.Item>\r\n                  </LinkContainer> */}\r\n\r\n                  {/* Parent only links */}\r\n                  {userInfo.role === 'parent' && (\r\n                    <LinkContainer to='/parent'>\r\n                      <NavDropdown.Item>My Children's reports</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  )}\r\n\r\n                  {/* Student only links */}\r\n                  {userInfo.role === 'student' && (\r\n                    <LinkContainer to={`/report/${userInfo._id}`}>\r\n                      <NavDropdown.Item>My Report</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  )}\r\n\r\n                  {/* Teacher and Admin only links */}\r\n                  {userInfo.role === 'teacher' ||\r\n                    (userInfo.role === 'admin' && (\r\n                      <LinkContainer to={`/findstudent`}>\r\n                        <NavDropdown.Item>Find Student</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    ))}\r\n\r\n                  {/* Everyone has access to logout */}\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                // No user? go back to login page\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i class='far fa-user'></i> Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from '../constants/userConstants';\r\n\r\n// Parent login using email/password\r\nexport const login = (email, password) => async (dispatch) => {\r\n  console.log('login action attempt', email, password);\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log('login action fail');\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clear redux and remove cookie with token in\r\nexport const logout = () => async (dispatch) => {\r\n  console.log('logout');\r\n  const { data } = await axios.get('/api/users/logout');\r\n  dispatch({ type: USER_LOGOUT });\r\n  // history.push('/');\r\n};\r\n\r\n// Called on page load, check if token exists and return the user if token is valid\r\nexport const checkSession = () => async (dispatch) => {\r\n  console.log('check session');\r\n  try {\r\n    const { data } = await axios.get('/api/users/current-session', {\r\n      crossdomain: true,\r\n    });\r\n    console.log('check data', data);\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log('login action fail');\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copright &copy; Bradbury2020</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Tabs, Tab } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import Message from '../components/Message'\r\n// import Loader from '../components/Loader'\r\nimport { login, checkSession } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  // Fields for the form\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // Redux user data\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    // When logged in send to the right page... TODO\r\n    if (userInfo) {\r\n      if (userInfo.role === 'parent') {\r\n        history.push('/parent');\r\n      } else if (userInfo.role === 'student') {\r\n        history.push(`/report/${userInfo._id}`);\r\n      } else if (userInfo.role === 'admin') {\r\n        // Add Admin user route on frontend\r\n        history.push('/findstudent');\r\n      } else if (userInfo.role === 'teacher') {\r\n        history.push('/findstudent');\r\n      } else {\r\n        history.push('/login');\r\n      }\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  // Send username and password to the login action (parents)\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Tabs defaultActiveKey='students/staff' id='login'>\r\n      <Tab eventKey='students/staff' title='students/staff'>\r\n        <FormContainer>\r\n          {/* Button for Google users to use */}\r\n          <button\r\n            className='btn btn-primary'\r\n            onClick={async () => {\r\n              console.log('google');\r\n              await window.open(\r\n                'http://localhost:5000/api/users/google',\r\n                '_self'\r\n              );\r\n              // dispatch(checkSession());\r\n            }}\r\n          >\r\n            Google Login\r\n          </button>\r\n        </FormContainer>\r\n      </Tab>\r\n      <Tab eventKey='parents/guardians' title='parents/guardians'>\r\n        <FormContainer>\r\n          <h1>Sign In</h1>\r\n          {/* {error && <Message variant='danger'>{error}</Message>} */}\r\n          {/* {loading && <Loader />} */}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Sign In\r\n            </Button>\r\n          </Form>\r\n        </FormContainer>\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getStudentData } from '../actions/parentActions';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\n\r\nconst ParentDashboard = ({ match, history }) => {\r\n  // const history = useHistory();\r\n\r\n  // Redux user data\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // Contains info about a parents kids\r\n  const parentData = useSelector((state) => state.parentData);\r\n  const { studentData, loading } = parentData;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.role === 'parent') {\r\n      dispatch(getStudentData());\r\n      console.log(studentData);\r\n    } else {\r\n      console.log('no user info');\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Parent Dashboard</h1>\r\n      {loading ? (\r\n        <div>Loading</div>\r\n      ) : studentData ? (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>LATEST REPORT</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {studentData.map((student) => {\r\n              const reportDate = new Date(student.updatedAt);\r\n              return (\r\n                <tr key={student._id}>\r\n                  <td>{student.name}</td>\r\n                  <td>{student.email}</td>\r\n                  <td>\r\n                    {reportDate.getDate()}/{reportDate.getMonth() + 1}/\r\n                    {reportDate.getFullYear()}\r\n                  </td>\r\n                  {console.log(student)}\r\n                  <td>\r\n                    <LinkContainer to={`/student/${student._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        Read Report\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <div>error</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParentDashboard;\r\n","import axios from 'axios';\r\nimport {\r\n  PARENT_REQUEST,\r\n  PARENT_SUCCESS,\r\n  PARENT_FAIL,\r\n} from '../constants/parentConstants';\r\n\r\nexport const getStudentData = () => async (dispatch) => {\r\n  console.log('getStudentData for Parents');\r\n  try {\r\n    // Needed???????????????? Seems to work without\r\n    dispatch({\r\n      type: PARENT_REQUEST,\r\n    });\r\n    // const config = {\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    // };\r\n\r\n    const { data } = await axios.get('/api/parents', { crossdomain: true });\r\n\r\n    dispatch({\r\n      type: PARENT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log('Parent fail');\r\n    dispatch({\r\n      type: PARENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//   Styling\r\nconst StyledSvg = styled.svg`\r\n  display: block;\r\n  margin: 20px auto;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst StyledCircle = styled.circle`\r\n  fill: none;\r\n`;\r\nconst StyledCircleBg = styled.circle`\r\n  fill: none;\r\n`;\r\n\r\nconst StyledText = styled.text`\r\n  font-size: 2rem;\r\n  text-anchor: middle;\r\n  fill: #000;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StyledSubText = styled.text`\r\n  font-size: 1rem;\r\n  text-anchor: middle;\r\n  fill: #000;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CirclePercentage = ({\r\n  size,\r\n  progress,\r\n  effort,\r\n  previousEffort,\r\n  strokeWidth,\r\n  circleOneStroke,\r\n  circleTwoStroke,\r\n}) => {\r\n  console.log(previousEffort);\r\n\r\n  // Hooks\r\n  const [offset, setOffset] = useState(0);\r\n  const circleRef = useRef(null);\r\n\r\n  // Circle maths\r\n  const center = size / 2;\r\n  const radius = size / 2 - strokeWidth / 2;\r\n  const circumference = 2 * Math.PI * radius;\r\n\r\n  useEffect(() => {\r\n    const progressOffset = (progress / 100) * circumference;\r\n    console.log(progressOffset);\r\n    setOffset(progressOffset);\r\n    circleRef.current.style = 'transition: stroke-dashoffset 0.5s ease-in-out;';\r\n  }, [setOffset, circumference, progress, offset]);\r\n  return (\r\n    <>\r\n      <StyledSvg width={size} height={size}>\r\n        <StyledCircleBg\r\n          stroke={circleOneStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n        />\r\n\r\n        <StyledCircle\r\n          ref={circleRef}\r\n          stroke={circleTwoStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n        />\r\n        <StyledText x={`${center}`} y={`${center}`}>\r\n          {effort}\r\n        </StyledText>\r\n        <StyledSubText x={center} y={center + 30}>\r\n          Previous: {previousEffort}\r\n        </StyledSubText>\r\n      </StyledSvg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CirclePercentage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CirclePercentage from '../CirclePercentage';\r\n\r\nconst AverageEffort = ({ averageEffortArray }) => {\r\n  console.log(averageEffortArray);\r\n  const currentEffort = averageEffortArray[0];\r\n  const previousEffort = averageEffortArray[1];\r\n  const currentEffortPercentage = (currentEffort / 5) * 100;\r\n\r\n  const effortColor = () => {\r\n    console.log(currentEffort, previousEffort);\r\n\r\n    // Determine the colour for the Effort Circle\r\n    if (currentEffort > previousEffort) {\r\n      return 'green';\r\n    } else if (currentEffort === previousEffort) {\r\n      return 'orange';\r\n    } else {\r\n      return 'red';\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {averageEffortArray.length > 1 ? (\r\n        <>\r\n          <h2>Average Effort</h2>\r\n          <p>Across all subjects</p>\r\n        </>\r\n      ) : averageEffortArray.length === 1 ? (\r\n        <p>Effort: {averageEffortArray[0]}</p>\r\n      ) : (\r\n        <p>No effort data to show</p>\r\n      )}\r\n      <CirclePercentage\r\n        progress={currentEffortPercentage}\r\n        effort={currentEffort}\r\n        previousEffort={previousEffort}\r\n        size={250}\r\n        strokeWidth={30}\r\n        circleOneStroke={effortColor()}\r\n        circleTwoStroke='#ddd'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AverageEffort;\r\n","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst ReportsList = ({ reports, id }) => {\r\n  console.log('reports', reports);\r\n  return (\r\n    <div>\r\n      <h2>Reports</h2>\r\n      <ListGroup>\r\n        {reports.map((report, index) => {\r\n          const reportDate = new Date(report.createdAt);\r\n          return (\r\n            <LinkContainer\r\n              key={report._id}\r\n              to={`/student/${id}/report/${report.createdAt}`}\r\n            >\r\n              <ListGroup.Item action variant='light'>\r\n                Report Date:{reportDate.getDate()}/{reportDate.getMonth() + 1}/\r\n                {reportDate.getFullYear()}{' '}\r\n                {index === 0 && <span>(Latest)</span>}\r\n              </ListGroup.Item>\r\n            </LinkContainer>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsList;\r\n","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst SubjectList = ({ subjects, id }) => {\r\n  console.log(subjects);\r\n  return (\r\n    <div>\r\n      <h2>Subject Reports</h2>\r\n      <ListGroup>\r\n        {subjects.map((subject, index) => {\r\n          const reportDate = new Date(subject.createdAt);\r\n          return (\r\n            <LinkContainer\r\n              key={subject.subjectName}\r\n              to={`/student/${id}/subject/${subject.subjectName}`}\r\n            >\r\n              <ListGroup.Item action variant='light'>\r\n                {subject.subjectName}\r\n              </ListGroup.Item>\r\n            </LinkContainer>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubjectList;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getReportData } from '../actions/studentActions';\r\nimport AverageEffort from '../components/studentData/AverageEffort';\r\nimport ReportsList from '../components/studentData/ReportsList';\r\nimport styled from 'styled-components';\r\nimport SubjectList from '../components/studentData/SubjectList';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst ReportsSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst ReportScreen = ({ history, match }) => {\r\n  // Logged in user\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  // Individual Student\r\n  const reduxReportData = useSelector((state) => state.reportData);\r\n  // Destructure student and their report data, with a default if empty\r\n  const {\r\n    loading,\r\n    student,\r\n    student: { reportData } = {},\r\n    ordered,\r\n    average,\r\n    subjects,\r\n  } = reduxReportData;\r\n\r\n  // console.log(match.params.id);\r\n  // console.log(history);\r\n  // console.log('student', student);\r\n  // console.log('reportData', reportData);\r\n\r\n  // Params passed by the URL\r\n  const userId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // initialise ordered reports\r\n  // let reportsOrderedByDate;\r\n  // let avgEffort;\r\n  // let subjectReports = [];\r\n\r\n  // // Student exists and has loaded\r\n  // if (student) {\r\n  //   // Sort the array of reports, newest first\r\n  //   reportsOrderedByDate = reportData.sort((a, b) => {\r\n  //     return new Date(b.createdAt) - new Date(a.createdAt);\r\n  //   });\r\n\r\n  //   // Find average effort of the reports\r\n  //   // Returns an array of numbers representing a reports average effort\r\n  //   avgEffort = reportsOrderedByDate\r\n  //     .map((report) =>\r\n  //       report.data.map((subject) => {\r\n  //         return subject.effort;\r\n  //       })\r\n  //     )\r\n  //     .map(\r\n  //       (report) =>\r\n  //         report.reduce((total, effort) => total + effort) / report.length\r\n  //     );\r\n\r\n  //   //   Sort the sorted data by subject rather than by report date\r\n  //   reportsOrderedByDate.forEach((report) => {\r\n  //     console.log(report);\r\n  //     report.data.forEach((subject) => {\r\n  //       console.log(subject);\r\n  //       // If the subject name appears in the subjectreports array\r\n  //       if (\r\n  //         !subjectReports.some((o) => o.subjectName === subject.subjectName)\r\n  //       ) {\r\n  //         // Add a new object\r\n  //         let obj = { subjectName: subject.subjectName, data: [] };\r\n  //         subjectReports.push(obj);\r\n  //         subject.date = report.createdAt;\r\n  //         obj.data.push(subject);\r\n  //       } else {\r\n  //         subjectReports.forEach((subjectArr) => {\r\n  //           if (subjectArr.subjectName === subject.subjectName) {\r\n  //             subject.date = report.createdAt;\r\n  //             subjectArr.data.push(subject);\r\n  //           }\r\n  //         });\r\n  //       }\r\n  //     });\r\n  //   });\r\n  //   console.log(subjectReports);\r\n  // }\r\n\r\n  // If user is logged in get report data, else send to login page\r\n  useEffect(() => {\r\n    if (!student) {\r\n      if (userId) {\r\n        dispatch(getReportData(userId));\r\n      } else {\r\n        history.push('/login');\r\n      }\r\n    }\r\n  }, [userId, history, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div>loading</div>\r\n      ) : student ? (\r\n        <>\r\n          <h1 style={{ marginBottom: '30px' }}>\r\n            {student.name}'s Latest Report\r\n          </h1>\r\n          <Row>\r\n            {/* The effort Circle - Props are an array of effort scores */}\r\n            {student && (\r\n              <Col xs={12} sm={12} md={4}>\r\n                <AverageEffort averageEffortArray={average} />\r\n              </Col>\r\n            )}\r\n            {student && (\r\n              <Col xs={12} sm={12} md={4}>\r\n                <ReportsList reports={ordered} id={userId} />\r\n              </Col>\r\n            )}\r\n            {student && (\r\n              <Col xs={12} sm={12} md={4}>\r\n                <SubjectList subjects={subjects} id={userId} />\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <div>Not found</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  STUDENT_REQUEST,\r\n  STUDENT_SUCCESS,\r\n  STUDENT_FAIL,\r\n} from '../constants/studentConstants';\r\n\r\nexport const getReportData = (_id) => async (dispatch) => {\r\n  console.log('getStudentData for All', _id);\r\n  try {\r\n    // Needed???????????????? Seems to work without\r\n    dispatch({\r\n      type: STUDENT_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/students',\r\n      {\r\n        _id,\r\n      },\r\n      config,\r\n      { crossdomain: true }\r\n    );\r\n\r\n    dispatch({\r\n      type: STUDENT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log('Student fail');\r\n    dispatch({\r\n      type: STUDENT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { teachersGetStudentData } from '../actions/teacherActions';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n// A screen for the teachers and admin to find student reports\r\nconst SearchScreen = () => {\r\n  const dispatch = useDispatch();\r\n  // Fields for the form\r\n  const [intake, setIntake] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  // Application state - Teacher search results\r\n  const teacherData = useSelector((state) => state.teacherData);\r\n  const { teacherStudentData, loading, error } = teacherData;\r\n\r\n  const submitHandler = (e) => {\r\n    //   Call find student teacher action\r\n    e.preventDefault();\r\n    dispatch(teachersGetStudentData(intake, name));\r\n  };\r\n\r\n  useEffect(() => {\r\n    //   Re-render when students are found\r\n  });\r\n\r\n  console.log('tsd', teacherStudentData && teacherStudentData.length);\r\n\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <h1>Find Student</h1>\r\n        {/* {error && <Message variant='danger'>{error}</Message>} */}\r\n        {/* {loading && <Loader />} */}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='intake'>\r\n            <Form.Label>Intake</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter intake year'\r\n              value={intake}\r\n              onChange={(e) => setIntake(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Type Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Find\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      {/* Results produced upon submission of the form */}\r\n      <h2>Results</h2>\r\n      <Table striped bordered hover responsive className='table-sm'>\r\n        <thead>\r\n          <tr>\r\n            <th>NAME</th>\r\n            <th>EMAIL</th>\r\n            <th>LATEST REPORT</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading ? (\r\n            <div>loading</div>\r\n          ) : teacherStudentData ? (\r\n            teacherStudentData.map((student) => {\r\n              const reportDate = new Date(student.updatedAt);\r\n              return (\r\n                <tr key={student._id}>\r\n                  <td>{student.name}</td>\r\n                  <td>{student.email}</td>\r\n                  <td>\r\n                    {reportDate.getDate()}/{reportDate.getMonth() + 1}/\r\n                    {reportDate.getFullYear()}\r\n                  </td>\r\n                  {console.log(student)}\r\n                  <td>\r\n                    <LinkContainer to={`/student/${student._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        Read Report\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : error ? (\r\n            <div>{error}</div>\r\n          ) : teacherStudentData && teacherStudentData.length === 0 ? (\r\n            <div>No entries found</div>\r\n          ) : (\r\n            <div>Please make a search</div>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import axios from 'axios';\r\nimport {\r\n  TEACHER_REQUEST,\r\n  TEACHER_SUCCESS,\r\n  TEACHER_FAIL,\r\n} from '../constants/teacherConstants';\r\n\r\nexport const teachersGetStudentData = (intake, name) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: TEACHER_REQUEST,\r\n    });\r\n\r\n    // Request headers\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // Pass in params from the action call\r\n    const { data } = await axios.get(\r\n      '/api/teachers/searchStudents',\r\n      { params: { intake, name } },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: TEACHER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    console.log('TEACHER fail');\r\n    dispatch({\r\n      type: TEACHER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst SubjectReportScreen = ({ history, match }) => {\r\n  // Individual Student\r\n  const reduxReportData = useSelector((state) => state.reportData);\r\n  // Destructure student and their report data, with a default if empty\r\n  const {\r\n    loading,\r\n    student,\r\n    student: { reportData } = {},\r\n    ordered,\r\n    average,\r\n    subjects,\r\n  } = reduxReportData;\r\n\r\n  const grades = subjects.filter((subject) => {\r\n    if (subject.subjectName === match.params.subject) {\r\n      return subject;\r\n    }\r\n  });\r\n\r\n  const [gradesObj] = grades;\r\n\r\n  console.log(gradesObj);\r\n\r\n  const subjectLabels = [];\r\n  const subjectGrades = [];\r\n\r\n  gradesObj.data.forEach((report) => {\r\n    const reportDate = new Date(report.date);\r\n    const graphDate = `${reportDate.getDate()}/${\r\n      reportDate.getMonth() + 1\r\n    }/${reportDate.getFullYear()}`;\r\n    subjectGrades.push(report.subjectGrade);\r\n    subjectLabels.push(graphDate);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>{match.params.subject} Report</h2>\r\n      <p>A report about a single subject</p>\r\n      <Line\r\n        data={{\r\n          labels: subjectLabels,\r\n          datasets: [\r\n            {\r\n              label: 'Current Grade',\r\n              data: subjectGrades,\r\n              borderColor: '#ff0000',\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          title: { display: true, text: match.params.subject },\r\n          legend: {\r\n            display: true,\r\n            position: 'bottom',\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubjectReportScreen;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Col, Row, Card } from 'react-bootstrap';\r\n\r\nconst SingleReportScreen = ({ history, match }) => {\r\n  // Individual Student\r\n  const reduxReportData = useSelector((state) => state.reportData);\r\n  // Destructure student and their report data, with a default if empty\r\n  const {\r\n    loading,\r\n    student,\r\n    student: { reportData } = {},\r\n    ordered,\r\n    average,\r\n    subjects,\r\n  } = reduxReportData;\r\n\r\n  const report = ordered.filter((report) => {\r\n    if (report.updatedAt === match.params.reportId) {\r\n      return report;\r\n    }\r\n  });\r\n\r\n  const [reportObj] = report;\r\n  console.log(reportObj);\r\n  const reportDate = new Date(reportObj.updatedAt);\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Single Report ({reportDate.getDate()}/{reportDate.getMonth() + 1}/\r\n        {reportDate.getFullYear()})\r\n      </h2>\r\n      {reportObj.data.map((subject) => {\r\n        return (\r\n          <Card style={{ width: '18rem' }}>\r\n            <Card.Body>\r\n              <Card.Title>{subject.subjectName}</Card.Title>\r\n              <Card.Text>Current Grade: {subject.subjectGrade}</Card.Text>\r\n              <Card.Text>Effort: {subject.effort}/5</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleReportScreen;\r\n","import React from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <>\r\n      <Jumbotron>\r\n        <h1 className='display-3'>Welcome to Friesland!</h1>\r\n        <p className='lead'>\r\n          Here you wil find all the assessment data about you, your children or\r\n          your students\r\n        </p>\r\n        <hr className='my-2' />\r\n        <p>Please login to access all that lovely information</p>\r\n        <p className='lead'>\r\n          <LinkContainer to='/login'>\r\n            <Button color='primary'>Login</Button>\r\n          </LinkContainer>\r\n        </p>\r\n      </Jumbotron>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport { Container } from 'react-bootstrap';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport DataDashboard from './screens/DataDashboard';\r\nimport ParentDashboard from './screens/ParentDashboard';\r\nimport ReportScreen from './screens/ReportScreen';\r\nimport SearchScreen from './screens/SearchScreen';\r\nimport SubjectReportScreen from './screens/SubjectReportScreen';\r\nimport SingleReportScreen from './screens/SingleReportScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        {/* <h1>School Data</h1> */}\r\n\r\n        <Container>\r\n          <Route path='/login' component={LoginScreen} /> {/*   */}\r\n          {/* <Route path='/dashboard' component={DataDashboard} />{' '} */}\r\n          {/* Currently nothing */}\r\n          <Route path='/parent' component={ParentDashboard} />\r\n          {/* Currently only works for parents. Add student  */}\r\n          <Route exact path='/student/:id' component={ReportScreen} />\r\n          {/* Contains single student report should be available to all but protected  */}\r\n          {/* Teacher screen for finding student reports */}\r\n          <Route path='/findstudent' component={SearchScreen} />\r\n          {/* Single subject */}\r\n          <Route\r\n            path='/student/:id/subject/:subject'\r\n            // path='/report/subject/:subject'\r\n            component={SubjectReportScreen}\r\n          />\r\n          {/* Single report */}\r\n          <Route\r\n            path='/student/:id/report/:reportId'\r\n            component={SingleReportScreen}\r\n          />\r\n          <Route exact path='/' component={HomeScreen} />\r\n          {/* Add parent */}\r\n          {/* Edit parent */}\r\n          {/* Delete Parent */}\r\n          {/* Add student */}\r\n          {/* Delete Student */}\r\n          {/* Edit Student */}\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}